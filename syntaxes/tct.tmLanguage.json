{
    "information_for_contributors": [
        "This file has been converted from https://github.com/sumneko/lua.tmbundle/blob/master/Syntaxes/Lua.plist",
        "If you want to provide a fix or improvement, please create a pull request against the original repository.",
        "Once accepted there, we are happy to receive an update request."
    ],
    "version": "https://github.com/sumneko/lua.tmbundle/commit/94ce82cc4d45f82641a5252d7a7fd9e28c875adc",
    "name": "Turing TC",
    "scopeName": "source.tct",
    "patterns": [
        {
            "begin": "\\b(?:(local)\\s+)?(programa)\\b(?![,:])",
            "beginCaptures": {
                "1": {
                    "name": "keyword.local.tct"
                },
                "2": {
                    "name": "keyword.control.tct"
                }
            },
            "end": "(?<=[\\)\\-{}\\[\\]\"'])",
            "name": "meta.function.tct",
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "begin": "(\\()",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.parameters.begin.tct"
                        }
                    },
                    "end": "(\\))|(?=[\\-\\.{}\\[\\]\"'])",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.definition.parameters.finish.tct"
                        }
                    },
                    "name": "meta.parameter.tct",
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "match": "[a-zA-Z_][a-zA-Z0-9_]*",
                            "name": "variable.parameter.function.tct"
                        },
                        {
                            "match": ",",
                            "name": "punctuation.separator.arguments.tct"
                        },
                        {
                            "begin": ":",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.separator.arguments.tct"
                                }
                            },
                            "end": "(?=[\\),])",
                            "patterns": [
                                {
                                    "include": "#emmydoc.type"
                                }
                            ]
                        }
                    ]
                },
                {
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b\\s*(?=:)",
                    "name": "entity.name.class.tct"
                },
                {
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
                    "name": "entity.name.function.tct"
                }
            ]
        },
        {
            "match": "(?<![\\w\\d.])0[xX][0-9A-Fa-f]+(\\.[0-9A-Fa-f]*)?([eE]-?\\d*)?([pP][-+]\\d+)?",
            "name": "constant.numeric.float.hexadecimal.tct"
        },
        {
            "match": "(?<![\\w\\d.])0[xX]\\.[0-9A-Fa-f]+([eE]-?\\d*)?([pP][-+]\\d+)?",
            "name": "constant.numeric.float.hexadecimal.tct"
        },
        {
            "match": "(?<![\\w\\d.])0[xX][0-9A-Fa-f]+(?![pPeE.0-9])",
            "name": "constant.numeric.integer.hexadecimal.tct"
        },
        {
            "match": "(?<![\\w\\d.])\\d+(\\.\\d*)?([eE]-?\\d*)?",
            "name": "constant.numeric.float.tct"
        },
        {
            "match": "(?<![\\w\\d.])\\.\\d+([eE]-?\\d*)?",
            "name": "constant.numeric.float.tct"
        },
        {
            "match": "(?<![\\w\\d.])\\d+(?![pPeE.0-9])",
            "name": "constant.numeric.integer.tct"
        },
        {
            "include": "#string"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.definition.comment.tct"
                }
            },
            "match": "\\A(#!).*$\\n?",
            "name": "comment.line.shebang.tct"
        },
        {
            "include": "#comment"
        },
        {
            "captures": {
                "1": {
                    "name": "keyword.control.goto.tct"
                },
                "2": {
                    "name": "string.tag.tct"
                }
            },
            "match": "\\b(goto)\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.section.embedded.begin.tct"
                },
                "2": {
                    "name": "punctuation.section.embedded.end.tct"
                }
            },
            "match": "(::)\\s*[a-zA-Z_][a-zA-Z0-9_]*\\s*(::)",
            "name": "string.tag.tct"
        },
        {
            "match": "<\\s*(const|close)\\s*>",
            "captures": {
                "1": {
                    "name": "string.tag.tct"
                }
            }
        },
        {
            "match": "\\<[a-zA-Z_\\*][a-zA-Z0-9_\\.\\*\\-]*\\>",
            "name": "storage.type.generic.tct"
        },
        {
            "match": "\\b(break|ramificar|fer|si|goto|llavors|mentre|fi|fsi|fmentre|amb|framificar)\\b",
            "name": "keyword.control.tct"
        },
        {
            "match": "\\b(local|global)\\b",
            "name": "keyword.local.tct"
        },
        {
            "match": "\\b(programa)\\b(?![,:])",
            "name": "keyword.control.tct"
        },
        {
            "match": "(?<![^.]\\.|:)\\b(false|nil(?!:)|true|_ENV|_G|_VERSION|math\\.(pi|huge|maxinteger|mininteger)|utf8\\.charpattern|io\\.(stdin|stdout|stderr)|package\\.(config|cpath|loaded|loaders|path|preload|searchers))\\b|(?<![.])\\.{3}(?!\\.)",
            "name": "constant.language.tct"
        },
        {
            "match": "(?<![^.]\\.|:)\\b(self)\\b",
            "name": "variable.language.self.tct"
        },
        {
            "match": "(?<![^.]\\.|:)\\b(assert|collectgarbage|dofile|error|getfenv|getmetatable|ipairs|load|loadfile|loadstring|module|next|pairs|pcall|print|rawequal|rawget|rawlen|rawset|require|select|setfenv|setmetatable|tonumber|tostring|type|unpack|xpcall)\\b(?!\\s*=(?!=))",
            "name": "support.function.tct"
        },
        {
            "match": "(?<![^.]\\.|:)\\b(async)\\b(?!\\s*=(?!=))",
            "name": "entity.name.tag.tct"
        },
        {
            "match": "(?<![^.]\\.|:)\\b(coroutine\\.(create|isyieldable|close|resume|running|status|wrap|yield)|string\\.(byte|char|dump|find|format|gmatch|gsub|len|lower|match|pack|packsize|rep|reverse|sub|unpack|upper)|table\\.(concat|insert|maxn|move|pack|remove|sort|unpack)|math\\.(abs|acos|asin|atan2?|ceil|cosh?|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pow|rad|random|randomseed|sinh?|sqrt|tanh?|tointeger|type)|io\\.(close|flush|input|lines|open|output|popen|read|tmpfile|type|write)|os\\.(clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(loadlib|seeall|searchpath)|debug\\.(debug|[gs]etfenv|[gs]ethook|getinfo|[gs]etlocal|[gs]etmetatable|getregistry|[gs]etupvalue|[gs]etuservalue|set[Cc]stacklimit|traceback|upvalueid|upvaluejoin)|bit32\\.(arshift|band|bnot|bor|btest|bxor|extract|replace|lrotate|lshift|rrotate|rshift)|utf8\\.(char|codes|codepoint|len|offset))\\b(?!\\s*=(?!=))",
            "name": "support.function.library.tct"
        },
        {
            "match": "\\b(and|or|not|\\|\\||\\&\\&|\\!)\\b",
            "name": "keyword.operator.tct"
        },
        {
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*(?:[({\"']|\\[\\[))",
            "name": "support.function.any-method.tct"
        },
        {
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*\\??:)",
            "name": "entity.name.class.tct"
        },
        {
            "match": "(?<=[^.]\\.|:)\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?!\\s*=\\s*\\b(programa)\\b)",
            "name": "entity.other.attribute.tct"
        },
        {
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?!\\s*=\\s*\\b(programa)\\b)",
            "name": "variable.other.tct"
        },
        {
            "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*=\\s*\\b(programa)\\b)",
            "name": "entity.name.function.tct"
        },
        {
            "match": "\\+|-|%|#|\\*|\\/|\\^|==?|~=|!=|<=?|>=?|(?<!\\.)\\.{2}(?!\\.)",
            "name": "keyword.operator.tct"
        }
    ],
    "repository": {
        "escaped_char": {
            "patterns": [
                {
                    "match": "\\\\[abfnrtv\\\\\"'\\n]",
                    "name": "constant.character.escape.tct"
                },
                {
                    "match": "\\\\z[\\n\\t ]*",
                    "name": "constant.character.escape.tct"
                },
                {
                    "match": "\\\\\\d{1,3}",
                    "name": "constant.character.escape.byte.tct"
                },
                {
                    "match": "\\\\x[0-9A-Fa-f][0-9A-Fa-f]",
                    "name": "constant.character.escape.byte.tct"
                },
                {
                    "match": "\\\\u\\{[0-9A-Fa-f]+\\}",
                    "name": "constant.character.escape.unicode.tct"
                },
                {
                    "match": "\\\\.",
                    "name": "invalid.illegal.character.escape.tct"
                }
            ]
        },
        "string": {
            "patterns": [
                {
                    "begin": "'",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.tct"
                        }
                    },
                    "end": "'[ \\t]*|(?=\\n)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.tct"
                        }
                    },
                    "name": "string.quoted.single.tct",
                    "patterns": [
                        {
                            "include": "#escaped_char"
                        }
                    ]
                },
                {
                    "begin": "\"",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.tct"
                        }
                    },
                    "end": "\"[ \\t]*|(?=\\n)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.tct"
                        }
                    },
                    "name": "string.quoted.double.tct",
                    "patterns": [
                        {
                            "include": "#escaped_char"
                        }
                    ]
                },
                {
                    "begin": "`",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.tct"
                        }
                    },
                    "end": "`[ \\t]*|(?=\\n)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.tct"
                        }
                    },
                    "name": "string.quoted.double.tct"
                },
                {
                    "begin": "(?<=\\.cdef)\\s*(\\[(=*)\\[)",
                    "beginCaptures": {
                        "0": {
                            "name": "string.quoted.other.multiline.tct"
                        },
                        "1": {
                            "name": "punctuation.definition.string.begin.tct"
                        }
                    },
                    "contentName": "meta.embedded.tct",
                    "end": "(\\]\\2\\])[ \\t]*",
                    "endCaptures": {
                        "0": {
                            "name": "string.quoted.other.multiline.tct"
                        },
                        "1": {
                            "name": "punctuation.definition.string.end.tct"
                        }
                    },
                    "patterns": [
                        {
                            "include": "source.c"
                        }
                    ]
                },
                {
                    "begin": "(?<!--)\\[(=*)\\[",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.tct"
                        }
                    },
                    "end": "\\]\\1\\][ \\t]*",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.tct"
                        }
                    },
                    "name": "string.quoted.other.multiline.tct"
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "begin": "(^[ \\t]+)?(?=//)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.whitespace.comment.leading.tct"
                        }
                    },
                    "end": "(?!\\G)((?!^)[ \\t]+\\n)?",
                    "endCaptures": {
                        "1": {
                            "name": "punctuation.whitespace.comment.trailing.tct"
                        }
                    },
                    "patterns": [
                        {
                            "begin": "//\\[(=*)\\[@@@",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.begin.tct"
                                }
                            },
                            "end": "\\]\\1\\]",
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.end.tct"
                                }
                            },
                            "name": "",
                            "patterns": [
                                {
                                    "include": "source.tct"
                                }
                            ]
                        },
                        {
                            "begin": "//\\[(=*)\\[",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.begin.tct"
                                }
                            },
                            "end": "\\]\\1\\]",
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.end.tct"
                                }
                            },
                            "name": "comment.block.tct",
                            "patterns": [
                                {
                                    "include": "#emmydoc"
                                },
                                {
                                    "include": "#ldoc_tag"
                                }
                            ]
                        },
                        {
                            "begin": "//",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.tct"
                                }
                            },
                            "end": "\\n",
                            "name": "comment.line.double-dash.tct"
                        },
                        {
                            "begin": "//",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.tct"
                                }
                            },
                            "end": "\\n",
                            "name": "comment.line.double-dash.documentation.tct",
                            "patterns": [
                                {
                                    "include": "#emmydoc"
                                },
                                {
                                    "include": "#ldoc_tag"
                                }
                            ]
                        },
                        {
                            "begin": "//",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.definition.comment.tct"
                                }
                            },
                            "end": "\\n",
                            "name": "comment.line.double-dash.tct",
                            "patterns": [
                                {
                                    "include": "#ldoc_tag"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "\\/\\*",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.begin.tct"
                        }
                    },
                    "end": "\\*\\/",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.end.tct"
                        }
                    },
                    "name": "comment.block.tct",
                    "patterns": [
                        {
                            "include": "#emmydoc"
                        },
                        {
                            "include": "#ldoc_tag"
                        }
                    ]
                }
            ]
        },
        "emmydoc": {
            "patterns": [
                {
                    "begin": "(?<=---[ \\t]*)@class",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "match": "\\b([a-zA-Z_\\*][a-zA-Z0-9_\\.\\*\\-]*)",
                            "name": "support.class.tct"
                        },
                        {
                            "match": ":|,",
                            "name": "keyword.operator.tct"
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)@enum",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "begin": "\\b([a-zA-Z_\\*][a-zA-Z0-9_\\.\\*\\-]*)",
                            "beginCaptures": {
                                "0": {
                                    "name": "variable.tct"
                                }
                            },
                            "end": "(?=\\n)"
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)@type",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "include": "#emmydoc.type"
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)@alias",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "begin": "\\b([a-zA-Z_\\*][a-zA-Z0-9_\\.\\*\\-]*)",
                            "beginCaptures": {
                                "0": {
                                    "name": "variable.tct"
                                }
                            },
                            "end": "(?=[\\n#])",
                            "patterns": [
                                {
                                    "include": "#emmydoc.type"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)(@operator)\\s*(\\b[a-z]+)?",
                    "beginCaptures": {
                        "1": {
                            "name": "storage.type.annotation.tct"
                        },
                        "2": {
                            "name": "support.function.library.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "include": "#emmydoc.type"
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)@cast",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "begin": "\\b([a-zA-Z_\\*][a-zA-Z0-9_\\.\\*\\-]*)",
                            "beginCaptures": {
                                "0": {
                                    "name": "variable.other.tct"
                                }
                            },
                            "end": "(?=\\n)",
                            "patterns": [
                                {
                                    "include": "#emmydoc.type"
                                },
                                {
                                    "match": "([+-|])",
                                    "name": "keyword.operator.tct"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)@param",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(\\??)",
                            "beginCaptures": {
                                "1": {
                                    "name": "entity.name.variable.tct"
                                },
                                "2": {
                                    "name": "keyword.operator.tct"
                                }
                            },
                            "end": "(?=[\\n#])",
                            "patterns": [
                                {
                                    "include": "#emmydoc.type"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)@return",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "match": "\\?",
                            "name": "keyword.operator.tct"
                        },
                        {
                            "include": "#emmydoc.type"
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)@field",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "begin": "(\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b|(\\[))(\\??)",
                            "beginCaptures": {
                                "2": {
                                    "name": "entity.name.variable.tct"
                                },
                                "3": {
                                    "name": "keyword.operator.tct"
                                }
                            },
                            "end": "(?=[\\n#])",
                            "patterns": [
                                {
                                    "include": "#string"
                                },
                                {
                                    "include": "#emmydoc.type"
                                },
                                {
                                    "match": "\\]",
                                    "name": "keyword.operator.tct"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)@generic",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
                            "beginCaptures": {
                                "0": {
                                    "name": "storage.type.generic.tct"
                                }
                            },
                            "end": "(?=\\n)|(,)",
                            "endCaptures": {
                                "0": {
                                    "name": "keyword.operator.tct"
                                }
                            },
                            "patterns": [
                                {
                                    "match": ":",
                                    "name": "keyword.operator.tct"
                                },
                                {
                                    "include": "#emmydoc.type"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)@vararg",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "include": "#emmydoc.type"
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)@overload",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "include": "#emmydoc.type"
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)@deprecated",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])"
                },
                {
                    "begin": "(?<=---[ \\t]*)@meta",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])"
                },
                {
                    "begin": "(?<=---[ \\t]*)@private",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])"
                },
                {
                    "begin": "(?<=---[ \\t]*)@protected",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])"
                },
                {
                    "begin": "(?<=---[ \\t]*)@package",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])"
                },
                {
                    "begin": "(?<=---[ \\t]*)@version",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "match": "\\b(5\\.1|5\\.2|5\\.3|5\\.4|JIT)\\b",
                            "name": "support.class.tct"
                        },
                        {
                            "match": ",|\\>|\\<",
                            "name": "keyword.operator.tct"
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)@see",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "match": "\\b([a-zA-Z_\\*][a-zA-Z0-9_\\.\\*\\-]*)",
                            "name": "support.class.tct"
                        },
                        {
                            "match": "#",
                            "name": "keyword.operator.tct"
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)@diagnostic",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "begin": "([a-zA-Z_\\-0-9]+)[ \\t]*(:)?",
                            "beginCaptures": {
                                "1": {
                                    "name": "keyword.other.unit"
                                },
                                "2": {
                                    "name": "keyword.operator.unit"
                                }
                            },
                            "end": "(?=\\n)",
                            "patterns": [
                                {
                                    "match": "\\b([a-zA-Z_\\*][a-zA-Z0-9_\\-]*)",
                                    "name": "support.class.tct"
                                },
                                {
                                    "match": ",",
                                    "name": "keyword.operator.tct"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "(?<=---[ \\t]*)@module",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "include": "#string"
                        }
                    ]
                },
                {
                    "match": "(?<=---[ \\t]*)@(async|nodiscard)",
                    "name": "storage.type.annotation.tct"
                },
                {
                    "begin": "(?<=---)\\|\\s*[\\>\\+]?",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.annotation.tct"
                        }
                    },
                    "end": "(?=[\\n@#])",
                    "patterns": [
                        {
                            "include": "#string"
                        }
                    ]
                }
            ]
        },
        "emmydoc.type": {
            "patterns": [
                {
                    "begin": "\\bfun\\b",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.control.tct"
                        }
                    },
                    "end": "(?=[\\s#])",
                    "patterns": [
                        {
                            "match": "[\\(\\),:\\?][ \\t]*",
                            "name": "keyword.operator.tct"
                        },
                        {
                            "match": "([a-zA-Z_][a-zA-Z0-9_\\.\\*\\[\\]\\<\\>\\,\\-]*)(?<!,)[ \\t]*(?=\\??:)",
                            "name": "entity.name.variable.tct"
                        },
                        {
                            "include": "#emmydoc.type"
                        },
                        {
                            "include": "#string"
                        }
                    ]
                },
                {
                    "match": "\\<[a-zA-Z_\\*][a-zA-Z0-9_\\.\\*\\-]*\\>",
                    "name": "storage.type.generic.tct"
                },
                {
                    "match": "\\basync\\b",
                    "name": "entity.name.tag.tct"
                },
                {
                    "match": "[\\{\\}\\:\\,\\?\\|\\`][ \\t]*",
                    "name": "keyword.operator.tct"
                },
                {
                    "begin": "(?=[a-zA-Z_\\.\\*\"'\\[])",
                    "end": "(?=[\\s\\)\\,\\?\\:\\}\\|#])",
                    "patterns": [
                        {
                            "match": "([a-zA-Z0-9_\\.\\*\\[\\]\\<\\>\\,\\-]+)(?<!,)[ \\t]*",
                            "name": "support.type.tct"
                        },
                        {
                            "match": "(\\.\\.\\.)[ \\t]*",
                            "name": "constant.language.tct"
                        },
                        {
                            "include": "#string"
                        }
                    ]
                }
            ]
        },
        "ldoc_tag": {
            "match": "\\G[ \\t]*(@)(alias|annotation|author|charset|class|classmod|comment|constructor|copyright|description|example|export|factory|field|file|fixme|programa|include|lfunction|license|local|module|name|param|pragma|private|raise|release|return|script|section|see|set|static|submodule|summary|tfield|thread|tparam|treturn|todo|topic|type|usage|warning|within)\\b",
            "captures": {
                "1": {
                    "name": "punctuation.definition.block.tag.ldoc"
                },
                "2": {
                    "name": "storage.type.class.ldoc"
                }
            }
        }
    }
}